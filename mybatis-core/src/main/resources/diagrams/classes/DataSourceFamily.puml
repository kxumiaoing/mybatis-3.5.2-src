@startuml

DataSource : +{abstract} Connection getConnection()
DataSource : +{abstract} Connection getConnection(String username, String password)

note top of DataSource
    数据连接源
end note

''''''''''''''''''''''''''''''''''''''''''''''''
class UnpooledDataSource implements DataSource

note top of UnpooledDataSource
    非池数据连接源
    使用DriverManager获取一个连接，并且设置连接的事务隔离级别以及自动提交标示
end note

''''''''''''''''''''''''''''''''''''''''''''''''
class PooledDataSource implements DataSource
PooledDataSource o-- UnpooledDataSource

note bottom of PooledDataSource
    池数据连接源
    缓存PooledConnection（是InvocationHandler的实例），获取的是Connection的代理对象（主要控制关闭，即不是真的关闭，而是归还到池子里面）
end note

''''''''''''''''''''''''''''''''''''''''''''''''
DataSourceFactory : +{abstract} void setProperties(Properties props) //接受外部设置属性
DataSourceFactory : +{abstract}DataSource getDataSource() //生成DataSource对象

note top of DataSourceFactory
    数据连接源工厂
end note

''''''''''''''''''''''''''''''''''''''''''''''''
class UnpooledDataSourceFactory implements DataSourceFactory

note bottom of UnpooledDataSourceFactory
    非池数据连接源池（UnpooledDataSource）工厂
end note

''''''''''''''''''''''''''''''''''''''''''''''''
class PooledDataSourceFactory implements UnpooledDataSourceFactory

note top of PooledDataSourceFactory
    池数据连接源池（PooledDataSource）工厂
end note

''''''''''''''''''''''''''''''''''''''''''''''''
class JndiDataSourceFactory implements DataSourceFactory

note top of JndiDataSourceFactory
    jndi数据连接源池工厂
end note

@enduml